plugins {
    id 'java'
}

sourceSets.main.java.srcDirs = [ "src/" ]

dependencies {
    implementation project(path: ':CB_Utils', transitive: false)
    implementation project(transitive: false, path: ':mapsforge')
    implementation project(path: ':CB_UI_Base', transitive: false)
    implementation project(path: ':CB_Locator_Base', transitive: false)
    implementation project(':mapsforge_awt')
    implementation project(path: ':CB_Core', transitive: false)
    implementation (project(path: ':CB_UI')){
        exclude group: 'com.github.tony19'
    }
    // implementation project(':GPS_Simulator')
    //libgdx
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    // implementation 'com.github.blackears:svgSalamander:v1.1.1'
    implementation fileTree(dir: '../libs', include: ['svgSalamander-v1.1.1.jar'])
    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation 'org.xerial:sqlite-jdbc:3.43.0.0'
    implementation fileTree(dir: '../libs', include: ['logback-android-1.1.1-3.jar'])


}

project.ext.mainClassName = "de.DCB"
project.ext.assetsDir = new File("WorkingDir")

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}


task launcherJar(type: Jar, dependsOn: classes) {
    // classifier = 'launcher'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
    manifest {
        attributes('Main-Class': 'de.DCB')
    }
    with jar
}

task copyAssets(type: Copy) {
    from("../CB_Android/assets")
    into("../WorkingDir")
}


tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn copyAssets
}


java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}